/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fuelzap;

/**
 *
 * @author Hp
 */
import java.awt.Color;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

public class stockstatus extends javax.swing.JFrame {

    /**
     * Creates new form stockstatus
     */
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    String pname[] = new String[100];
    int stock[] = new int[100];
    int i;

    public stockstatus() {
        initComponents();
        i = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("STOCK STATUS SYSTEM");

        jLabel2.setText("SELECT THE RANGE");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select The Range", "1-50", "51-100", "101-150", "150-200", "200-250", "250-300" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel2)
                        .addGap(99, 99, 99)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedIndex() == 0) {
            showtabledata();
        } else if (jComboBox1.getSelectedIndex() == 1) {
            showtabledata1();
        } else if (jComboBox1.getSelectedIndex() == 2) {
            showtabledata2();
        } else if (jComboBox1.getSelectedIndex() == 3) {
            showtabledata3();
        } else if (jComboBox1.getSelectedIndex() == 4) {
            showtabledata4();
        } else if (jComboBox1.getSelectedIndex() == 5) {
            showtabledata5();
        } else if (jComboBox1.getSelectedIndex() == 6) {
            showtabledata6();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (LoginPage.type.equals("Manager")) {
            admin_dash obj = new admin_dash();
            obj.setVisible(true);
            this.hide();
        } else {
            user_dash obj = new user_dash();
            obj.setVisible(true);
            this.hide();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    void getitem() {
        conn = MySqlConnect.ConnectDB();
        String Sql = "Select Product_name,Product_stock from stockinventory ";
        try {
            pst = conn.prepareStatement(Sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                pname[i] = rs.getString("Product_name");
                stock[i] = Integer.parseInt(rs.getString("Product_stock"));
                i = i + 1;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        getitem();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for (int k = 0; k < i; k++) {
            dataset.setValue(stock[k], "Stock", pname[k]);
        }
        JFreeChart chart = ChartFactory.createBarChart("Stock Status", "Product Name", "Stock", dataset, PlotOrientation.VERTICAL, false, true, false);

        CategoryPlot p = chart.getCategoryPlot();

        p.setRangeGridlinePaint(Color.black);

        ChartFrame frame = new ChartFrame("Bar Chart Report", chart);

        frame.setVisible(true);

        frame.setSize(650, 550);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    void showtabledata() {
        try {
            conn = MySqlConnect.ConnectDB();
            String Sql = "select * from stockinventory where Product_stock<0 ";
            pst = conn.prepareStatement(Sql);

            rs = pst.executeQuery();
            JOptionPane.showMessageDialog(null, " JTable Udated SUCCESSFULL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    void showtabledata1() {
        try {
            conn = MySqlConnect.ConnectDB();
            String Sql = "select * from stockinventory where Product_stock>=1 and Product_stock<=50 ";
            pst = conn.prepareStatement(Sql);

            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            JOptionPane.showMessageDialog(null, " JTable Udated SUCCESSFULL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    void showtabledata2() {
        try {
            conn = MySqlConnect.ConnectDB();
            String Sql = "select * from stockinventory where Product_stock>=50 and Product_stock<=100 ";
            pst = conn.prepareStatement(Sql);

            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            JOptionPane.showMessageDialog(null, " JTable Udated SUCCESSFULL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }

    void showtabledata3() {
        try {
            conn = MySqlConnect.ConnectDB();
            String Sql = "select * from stockinventory where Product_stock>=100 and Product_stock<=150 ";
            pst = conn.prepareStatement(Sql);

            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            JOptionPane.showMessageDialog(null, " JTable Udated SUCCESSFULL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }

    void showtabledata4() {
        try {
            conn = MySqlConnect.ConnectDB();
            String Sql = "select * from stockinventory where Product_stock>=150 and Product_stock<=200 ";
            pst = conn.prepareStatement(Sql);

            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            JOptionPane.showMessageDialog(null, " JTable Udated SUCCESSFULL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }

    void showtabledata5() {
        try {
            conn = MySqlConnect.ConnectDB();
            String Sql = "select * from stockinventory where Product_stock>=200 and Product_stock<=250 ";
            pst = conn.prepareStatement(Sql);

            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            JOptionPane.showMessageDialog(null, " JTable Udated SUCCESSFULL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }

    void showtabledata6() {
        try {
            conn = MySqlConnect.ConnectDB();
            String Sql = "select * from stockinventory where Product_stock>=250 and Product_stock<=300 ";
            pst = conn.prepareStatement(Sql);

            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            JOptionPane.showMessageDialog(null, " JTable Udated SUCCESSFULL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stockstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stockstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stockstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stockstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stockstatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
